{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/address": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific address by its ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing address for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Update an existing address",
                "parameters": [
                    {
                        "description": "Updated address information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/address.UpdateAddressCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated address",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new address for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Create a new address",
                "parameters": [
                    {
                        "description": "Address information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/address.CreateAddressCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created address",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an address for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Delete an address",
                "parameters": [
                    {
                        "description": "Address ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/address.DeleteAddressCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted address confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/address/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all addresses in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Admin: Get all addresses",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all addresses",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/address/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all addresses for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get all addresses",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of addresses",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/address/city/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all available cities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get all cities",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cities",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/address/province/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all available provinces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get all provinces",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of provinces",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific article by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get article by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing article with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Update an article",
                "parameters": [
                    {
                        "description": "Updated article information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.UpdateArticleCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated article",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new article with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Article information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.CreateArticleCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created article",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing article by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Delete an article",
                "parameters": [
                    {
                        "description": "Article ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.DeleteArticleCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted article confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article-category": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific article category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Get article category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing article category with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Update an article category",
                "parameters": [
                    {
                        "description": "Updated category information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article_category.UpdateCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new category for articles with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Create a new article category",
                "parameters": [
                    {
                        "description": "Category information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article_category.CreateCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing article category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Delete an article category",
                "parameters": [
                    {
                        "description": "Category ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article_category.DeleteCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted category confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article-category/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all article categories with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Admin: Get all article categories",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all categories",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article-category/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all article categories with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article-category"
                ],
                "summary": "Get all article categories",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all articles with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Admin: Get all articles",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all articles",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all articles with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get all articles",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/article/filters-sort": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves articles based on specified filters and sorting criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "article"
                ],
                "summary": "Get articles by filters and sorting",
                "parameters": [
                    {
                        "description": "Filter and sort parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/article.GetByFiltersSortArticleQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered and sorted articles",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/basket": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the current user's shopping basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Get current basket",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Basket details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Basket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the user's shopping basket with new items or quantities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Update shopping basket",
                "parameters": [
                    {
                        "description": "Updated basket information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/basket.UpdateBasketCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated basket",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/basket/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all shopping baskets across all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Admin: Get all user baskets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all user baskets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/basket/user/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all shopping baskets for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Get all user baskets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user baskets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer-ticket": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific customer support ticket by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Get customer ticket by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a customer reply to an existing support ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Reply to a customer ticket",
                "parameters": [
                    {
                        "description": "Reply information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_ticket.ReplayCustomerTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated ticket with reply",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new support ticket for a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Create a customer support ticket",
                "parameters": [
                    {
                        "description": "Ticket information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_ticket.CreateCustomerTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created ticket",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer-ticket/admin": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds an admin reply to an existing customer support ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Admin: Reply to a customer ticket",
                "parameters": [
                    {
                        "description": "Admin reply information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_ticket.AdminReplayCustomerTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated ticket with admin reply",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer-ticket/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all customer support tickets across all customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Admin: Get all customer tickets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all customer tickets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer-ticket/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all support tickets for the current customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-ticket"
                ],
                "summary": "Get all customer tickets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of customer tickets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all customers with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Admin: Get all customers",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all customers",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Authenticates a customer and returns an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Customer login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.LoginCustomerCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the authenticated customer's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get customer profile",
                "responses": {
                    "200": {
                        "description": "Customer profile",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the authenticated customer's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Update customer profile",
                "parameters": [
                    {
                        "description": "Updated profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.UpdateProfileCustomerCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registers a new customer account with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Register new customer",
                "parameters": [
                    {
                        "description": "Customer registration information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.RegisterCustomerCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registered customer",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/verify": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verifies a customer's email address using the verification token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Verify customer email",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "verify_email",
                            "verify_phone",
                            "forget_password_email",
                            "forget_password_phone"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "VerifyEmailType",
                            "VerifyPhoneType",
                            "ForgetPasswordEmailType",
                            "ForgetPasswordPhoneType"
                        ],
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification successful",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/customer/verify-forget": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sends verification email or password reset link to the customer's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Request verification or password reset",
                "parameters": [
                    {
                        "description": "Email information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.RequestVerifyAndForgetCustomerCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Email sent confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/default-theme": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific default theme template by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default-theme"
                ],
                "summary": "Get default theme by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Theme details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Theme not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing default theme template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default-theme"
                ],
                "summary": "Update a default theme",
                "parameters": [
                    {
                        "description": "Updated theme information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/defaulttheme.UpdateDefaultThemeCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated theme",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Theme not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new default theme template for websites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default-theme"
                ],
                "summary": "Create a new default theme",
                "parameters": [
                    {
                        "description": "Theme information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/defaulttheme.CreateDefaultThemeCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created theme",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing default theme template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default-theme"
                ],
                "summary": "Delete a default theme",
                "parameters": [
                    {
                        "description": "Theme ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/defaulttheme.DeleteDefaultThemeCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted theme confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Theme not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/default-theme/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all default theme templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default-theme"
                ],
                "summary": "Get all default themes",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of themes",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/discount": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific discount by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Get discount by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discount details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing discount code or promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Update a discount",
                "parameters": [
                    {
                        "description": "Updated discount information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/discount.UpdateDiscountCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated discount",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new discount code or promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Create a new discount",
                "parameters": [
                    {
                        "description": "Discount information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/discount.CreateDiscountCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created discount",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing discount code or promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Delete a discount",
                "parameters": [
                    {
                        "description": "Discount ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/discount.DeleteDiscountCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted discount confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/discount/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all discount codes and promotions with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Admin: Get all discounts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all discounts",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/discount/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all discount codes and promotions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "Get all discounts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of discounts",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing file or directory with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Update a file or directory",
                "parameters": [
                    {
                        "description": "Updated file or directory information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.UpdateFileItemCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated file or directory",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new file or directory in the file system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Create file or directory",
                "parameters": [
                    {
                        "description": "File or directory information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.CreateOrDirectoryItemCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created file or directory",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft deletes a file or directory (moves to trash)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Delete a file or directory",
                "parameters": [
                    {
                        "description": "File or directory ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.DeleteFileItemCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted file or directory confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/download": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a file for download by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "description": "File ID to download",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.GetDownloadFileItemByIdQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download information",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/force": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently deletes a file or directory from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Permanently delete a file or directory",
                "parameters": [
                    {
                        "description": "File or directory ID to permanently delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.ForceDeleteFileItemCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permanently deleted file or directory confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/ids": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves multiple files or directories by their IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Get files or directories by IDs",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "expireMinutes",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isTemporary",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files or directories details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "One or more files or directories not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/operation": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Performs operations like copy, move, or rename on files and directories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Perform file operations",
                "parameters": [
                    {
                        "description": "Operation details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.FileOperationCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation result",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/restore": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Restores a previously deleted file or directory from trash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Restore deleted file or directory",
                "parameters": [
                    {
                        "description": "File or directory ID to restore",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.RestoreFileItemCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored file or directory",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "File or directory not found in trash",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/tree": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the tree structure of files and directories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Get directory tree",
                "parameters": [
                    {
                        "description": "Query parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileitem.GetTreeDirectoryQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Directory tree",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/file-item/tree/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the tree structure of deleted files and directories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-item"
                ],
                "summary": "Get deleted directory tree",
                "responses": {
                    "200": {
                        "description": "Deleted directory tree",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/gateway": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific payment gateway by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateway"
                ],
                "summary": "Get payment gateway by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new payment gateway or updates an existing one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateway"
                ],
                "summary": "Create or update payment gateway",
                "parameters": [
                    {
                        "description": "Gateway information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.CreateOrUpdateGatewayCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created or updated gateway",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/gateway/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all payment gateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateway"
                ],
                "summary": "Admin: Get all payment gateways",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all gateways",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/header-footer": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific header and footer template by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Get header/footer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "header",
                            "footer"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "HeaderType",
                            "FooterType"
                        ],
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Header/footer details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Header/footer not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing header and footer template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Update a header/footer",
                "parameters": [
                    {
                        "description": "Updated header/footer information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/header_footer.UpdateHeaderFooterCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated header/footer",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Header/footer not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new header and footer template for websites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Create a header/footer",
                "parameters": [
                    {
                        "description": "Header/footer information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/header_footer.CreateHeaderFooterCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created header/footer",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing header and footer template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Delete a header/footer",
                "parameters": [
                    {
                        "description": "Header/footer ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/header_footer.DeleteHeaderFooterCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted header/footer confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Header/footer not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/header-footer/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all header and footer templates with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Admin: Get all header/footers",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all header/footers",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/header-footer/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all header and footer templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "header-footer"
                ],
                "summary": "Get all header/footers",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "header",
                            "footer"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "HeaderType",
                            "FooterType"
                        ],
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of header/footers",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new order request from the user's basket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create an order request",
                "parameters": [
                    {
                        "description": "Order request information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.CreateOrderRequestCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created order request",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all orders across all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Admin: Get all orders",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all orders",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/customer/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all orders for the authenticated customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all customer orders",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of customer orders",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/customer/details": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific customer order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get customer order details",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "orderId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/user/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all orders for the authenticated user (seller)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all user orders",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user orders",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/user/details": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific user (seller) order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get user order details",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "orderId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/order/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verifies and finalizes an order after payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Verify an order",
                "parameters": [
                    {
                        "description": "Order verification information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.CreateOrderVerifyCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verified order",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/page": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific web page by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Get page by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing web page with new content and settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Update a page",
                "parameters": [
                    {
                        "description": "Updated page information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/page.UpdatePageCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated page",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new web page for a website",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Create a new page",
                "parameters": [
                    {
                        "description": "Page information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/page.CreatePageCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created page",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing web page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Delete a page",
                "parameters": [
                    {
                        "description": "Page ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/page.DeletePageCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted page confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/page/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all web pages across all websites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Admin: Get all pages",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all pages",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/page/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all web pages for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Get all pages",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pages",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/payment/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all payment transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Admin: Get all payments",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all payments",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/payment/request": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiates a payment request to a payment gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Request payment gateway",
                "parameters": [
                    {
                        "description": "Payment request information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.RequestGatewayCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment gateway request result",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/payment/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verifies a payment transaction after it's processed by the payment gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Verify payment",
                "parameters": [
                    {
                        "description": "Payment verification information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.VerifyPaymentCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verified payment",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/plan": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific subscription plan by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Get plan by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plan details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing subscription plan with new features and pricing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Update a subscription plan",
                "parameters": [
                    {
                        "description": "Updated plan information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.UpdatePlanCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated plan",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new subscription plan with specified features and pricing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Create a new subscription plan",
                "parameters": [
                    {
                        "description": "Plan information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.CreatePlanCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created plan",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing subscription plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Delete a subscription plan",
                "parameters": [
                    {
                        "description": "Plan ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.DeletePlanCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted plan confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/plan/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all available subscription plans",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Get all subscription plans",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of plans",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/plan/calculate": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculates the price for a subscription plan based on selected options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plan"
                ],
                "summary": "Calculate plan price",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "planId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated plan price",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing product with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "description": "Updated product information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProductCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated product",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new product with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateProductCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created product",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "description": "Product ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.DeleteProductCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted product confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-category": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific product category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Get product category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing product category with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Update a product category",
                "parameters": [
                    {
                        "description": "Updated category information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_category.UpdateCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new category for products with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Create a new product category",
                "parameters": [
                    {
                        "description": "Category information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_category.CreateCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing product category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Delete a product category",
                "parameters": [
                    {
                        "description": "Category ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_category.DeleteCategoryCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted category confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-category/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all product categories with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Admin: Get all product categories",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all categories",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-category/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all product categories with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-category"
                ],
                "summary": "Get all product categories",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-review": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific product review by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Get product review by ID",
                "parameters": [
                    {
                        "description": "Review ID to retrieve",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.GetByIdProductReviewQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing product review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Update a product review",
                "parameters": [
                    {
                        "description": "Updated review information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.UpdateProductReviewCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated review",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new review for a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Create a product review",
                "parameters": [
                    {
                        "description": "Review information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.CreateProductReviewCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created review",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing product review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Delete a product review",
                "parameters": [
                    {
                        "description": "Review ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.DeleteProductReviewCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted review confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-review/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all product reviews with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Admin: Get all product reviews",
                "parameters": [
                    {
                        "description": "Query parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.AdminGetAllProductReviewQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all reviews",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product-review/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all product reviews with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product-review"
                ],
                "summary": "Get all product reviews",
                "parameters": [
                    {
                        "description": "Query parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_review.GetAllProductReviewQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all products with additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Admin: Get all products",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all products",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all products with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/product/filters-sort": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves products based on specified filters and sorting criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get products by filters and sorting",
                "parameters": [
                    {
                        "description": "Filter and sort parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.GetByFiltersSortProductQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered and sorted products",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing role's name and permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Update an existing role",
                "parameters": [
                    {
                        "description": "Updated role information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.UpdateRoleCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated role",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new role with specified permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreateRoleCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created role",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all roles in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get all roles",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all roles",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/customer": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assigns a specific role to a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Assign role to customer",
                "parameters": [
                    {
                        "description": "Role and customer assignment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.SetRoleToCustomerCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned to customer",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Role or customer not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/permission/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all available permissions in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get all permissions",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all permissions",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all permissions assigned to a specific role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get role permissions",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of permissions for the role",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/plan": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assigns a specific role to a subscription plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Assign role to plan",
                "parameters": [
                    {
                        "description": "Role and plan assignment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.SetRoleToPlanCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned to plan",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Role or plan not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/role/user": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assigns a specific role to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Assign role to user",
                "parameters": [
                    {
                        "description": "Role and user assignment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.SetRoleToUserCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned to user",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Role or user not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/site": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific site by its ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Get site by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Site details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Site not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing site for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Update an existing site",
                "parameters": [
                    {
                        "description": "Updated site information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.UpdateSiteCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated site",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Site not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new site for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Create a new site",
                "parameters": [
                    {
                        "description": "Site information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.CreateSiteCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created site",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a site for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Delete a site",
                "parameters": [
                    {
                        "description": "Site ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.DeleteSiteCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted site confirmation",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Site not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/site/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all sites in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Admin: Get all sites",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all sites",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/site/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all sites for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Get all sites",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sites",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/ticket": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific ticket by its ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Get ticket by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new support ticket for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Create a new ticket",
                "parameters": [
                    {
                        "description": "Ticket information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket.CreateTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created ticket",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/ticket/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all tickets in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Admin: Get all tickets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all tickets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/ticket/admin/reply": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to add a reply to any support ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Admin: Reply to a ticket",
                "parameters": [
                    {
                        "description": "Admin reply information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket.AdminReplayTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated ticket with admin reply",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/ticket/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all tickets for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Get all tickets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tickets",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/ticket/reply": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a user reply to an existing support ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ticket"
                ],
                "summary": "Reply to a ticket",
                "parameters": [
                    {
                        "description": "Reply information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket.ReplayTicketCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated ticket with reply",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/unit-price": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing unit price configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-price"
                ],
                "summary": "Update unit price",
                "parameters": [
                    {
                        "description": "Unit price update information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/unit_price.UpdateUnitPriceCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated unit price",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Unit price not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/unit-price/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all unit price configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-price"
                ],
                "summary": "Get all unit prices",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of unit prices",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/unit-price/calculate": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculates the unit price based on provided parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit-price"
                ],
                "summary": "Calculate unit price",
                "responses": {
                    "200": {
                        "description": "Calculated unit price",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/admin/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin endpoint to retrieve all users in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Admin: Get all users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all users",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/credit/charge": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a request to charge the user's account credit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Request credit charge",
                "parameters": [
                    {
                        "description": "Credit charge request details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ChargeCreditRequestUserCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created charge request",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Authenticates a user and returns a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token and user details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/plan/upgrade": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a request to upgrade the user's subscription plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Request plan upgrade",
                "parameters": [
                    {
                        "description": "Plan upgrade request details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpgradePlanRequestUserCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created plan upgrade request",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile information for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the profile information for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Updated profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateProfileUserCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user profile",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterUserCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user account",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/verify": {
            "get": {
                "description": "Verifies a user's email or resets password using a verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verify user",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "verify_email",
                            "verify_phone",
                            "forget_password_email",
                            "forget_password_phone"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "VerifyEmailType",
                            "VerifyPhoneType",
                            "ForgetPasswordEmailType",
                            "ForgetPasswordPhoneType"
                        ],
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User verified or password reset",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "User not found or invalid code",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/user/verify-forget/request": {
            "post": {
                "description": "Sends a verification code or password reset link to the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Request verification or password reset",
                "parameters": [
                    {
                        "description": "Email verification or password reset request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestVerifyAndForgetUserCommand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Verification or reset request created",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/article": {
            "get": {
                "description": "Retrieves a specific article identified by its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get article by slug",
                "parameters": [
                    {
                        "description": "Article slug",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/website.GetSingleArticleBySlugQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/article/category": {
            "get": {
                "description": "Retrieves articles belonging to a specific category identified by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get articles by category slug",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "slug",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles in the category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/article/filters-sort": {
            "get": {
                "description": "Retrieves available filters and sorting options for articles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get article filters and sorting options",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title_a_z",
                            "title_z_a",
                            "recently_added",
                            "recently_updated",
                            "most_visited",
                            "least_visited",
                            "most_rated",
                            "least_rated",
                            "most_reviewed",
                            "least_reviewed"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "ArticleTitleAZSort",
                            "ArticleTitleZASort",
                            "ArticleRecentlyAddedSort",
                            "ArticleRecentlyUpdatedSort",
                            "ArticleMostVisitedSort",
                            "ArticleLeastVisitedSort",
                            "ArticleMostRatedSort",
                            "ArticleLeastRatedSort",
                            "ArticleMostReviewedSort",
                            "ArticleLeastReviewedSort"
                        ],
                        "name": "selectedSort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article filters and sorting options",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/header-footer": {
            "get": {
                "description": "Retrieves header and footer content for a specific domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get header and footer by domain",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Header and footer content",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/page": {
            "get": {
                "description": "Retrieves page content for a specific domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get page by domain",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page content",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Page or domain not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/product": {
            "get": {
                "description": "Retrieves a specific product identified by its slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get product by slug",
                "parameters": [
                    {
                        "description": "Product slug",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/website.GetSingleProductBySlugQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/product/category": {
            "get": {
                "description": "Retrieves products belonging to a specific category identified by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get products by category slug",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "slug",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products in the category",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/product/filters-sort": {
            "get": {
                "description": "Retrieves available filters and sorting options for products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Get product filters and sorting options",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "price_low_to_high",
                            "price_high_to_low",
                            "coupon_high_to_low",
                            "name_a_z",
                            "name_z_a",
                            "recently_added",
                            "recently_updated",
                            "most_selling",
                            "most_visited",
                            "most_rated",
                            "most_reviewed",
                            "least_visited",
                            "least_rated",
                            "least_reviewed"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "ProductPriceLowToHighSort",
                            "ProductPriceHighToLowSort",
                            "ProductCouponHighToLowSort",
                            "ProductNameAZSort",
                            "ProductNameZASort",
                            "ProductRecentlyAddedSort",
                            "ProductRecentlyUpdatedSort",
                            "ProductMostSellingSort",
                            "ProductMostVisitedSort",
                            "ProductMostRatedSort",
                            "ProductMostReviewedSort",
                            "ProductLeastVisitedSort",
                            "ProductLeastRatedSort",
                            "ProductLeastReviewedSort"
                        ],
                        "name": "selectedSort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product filters and sorting options",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        },
        "/website/product/search": {
            "get": {
                "description": "Searches for products based on provided criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "website"
                ],
                "summary": "Search products",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "description"
                        ],
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products matching search criteria",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.CreateAddressCommand": {
            "type": "object",
            "required": [
                "cityId",
                "latitude",
                "longitude",
                "provinceId"
            ],
            "properties": {
                "addressLine": {
                    "type": "string"
                },
                "cityId": {
                    "type": "integer"
                },
                "customerId": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "postalCode": {
                    "type": "string"
                },
                "provinceId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "address.DeleteAddressCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "address.UpdateAddressCommand": {
            "type": "object",
            "required": [
                "cityId",
                "id",
                "provinceId"
            ],
            "properties": {
                "addressLine": {
                    "type": "string"
                },
                "cityId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "postalCode": {
                    "type": "string"
                },
                "provinceId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "article.CreateArticleCommand": {
            "type": "object",
            "required": [
                "siteId"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "article.DeleteArticleCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "article.GetByFiltersSortArticleQuery": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "siteId"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "pageSize": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                },
                "selectedFilters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "selectedSort": {
                    "$ref": "#/definitions/enums.ArticleSortEnum"
                },
                "siteId": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "sortBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                }
            }
        },
        "article.UpdateArticleCommand": {
            "type": "object",
            "required": [
                "id",
                "siteId"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "article_category.CreateCategoryCommand": {
            "type": "object",
            "required": [
                "order",
                "siteId"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parentCategoryId": {
                    "type": "integer"
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "article_category.DeleteCategoryCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "article_category.UpdateCategoryCommand": {
            "type": "object",
            "required": [
                "id",
                "siteId"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parentCategoryId": {
                    "type": "integer"
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "basket.BasketItemCommand": {
            "type": "object",
            "required": [
                "productId",
                "quantity"
            ],
            "properties": {
                "basketItemId": {
                    "type": "integer"
                },
                "productId": {
                    "type": "integer"
                },
                "productVariantId": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "maximum": 1000
                }
            }
        },
        "basket.UpdateBasketCommand": {
            "type": "object",
            "required": [
                "basketItems",
                "siteId"
            ],
            "properties": {
                "basketItems": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/basket.BasketItemCommand"
                    }
                },
                "code": {
                    "type": "string"
                },
                "simpleAdd": {
                    "type": "boolean"
                },
                "siteId": {
                    "type": "integer"
                }
            }
        },
        "common_dto.PaginationJson": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "hasPreviousPage": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {}
                },
                "pageNumber": {
                    "type": "integer"
                },
                "search": {
                    "type": "string"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "customer.LoginCustomerCommand": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "customer.RegisterCustomerCommand": {
            "type": "object",
            "required": [
                "email",
                "siteId"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                }
            }
        },
        "customer.RequestVerifyAndForgetCustomerCommand": {
            "type": "object",
            "required": [
                "email",
                "phone",
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.VerifyTypeEnum"
                }
            }
        },
        "customer.UpdateProfileCustomerCommand": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "addressIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "nationalCode": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "customer_ticket.AdminReplayCustomerTicketCommand": {
            "type": "object",
            "required": [
                "assignedTo",
                "comment",
                "id",
                "priority",
                "product_category",
                "status"
            ],
            "properties": {
                "assignedTo": {
                    "type": "integer"
                },
                "comment": {
                    "$ref": "#/definitions/customer_ticket.CustomerCommentCommand"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/enums.CustomerTicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.CustomerTicketCategoryEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.CustomerTicketStatusEnum"
                }
            }
        },
        "customer_ticket.CreateCustomerTicketCommand": {
            "type": "object",
            "required": [
                "comment",
                "ownerUserId",
                "priority",
                "product_category"
            ],
            "properties": {
                "comment": {
                    "$ref": "#/definitions/customer_ticket.CustomerCommentCommand"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ownerUserId": {
                    "type": "integer"
                },
                "priority": {
                    "$ref": "#/definitions/enums.CustomerTicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.CustomerTicketCategoryEnum"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "customer_ticket.CustomerCommentCommand": {
            "type": "object",
            "required": [
                "respondentId"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "respondentId": {
                    "type": "integer"
                }
            }
        },
        "customer_ticket.ReplayCustomerTicketCommand": {
            "type": "object",
            "required": [
                "assignedTo",
                "comment",
                "id",
                "priority",
                "product_category",
                "status"
            ],
            "properties": {
                "assignedTo": {
                    "type": "integer"
                },
                "comment": {
                    "$ref": "#/definitions/customer_ticket.CustomerCommentCommand"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/enums.CustomerTicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.CustomerTicketCategoryEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.CustomerTicketStatusEnum"
                }
            }
        },
        "defaulttheme.CreateDefaultThemeCommand": {
            "type": "object",
            "required": [
                "mediaId"
            ],
            "properties": {
                "demo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "mediaId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pages": {
                    "type": "string"
                }
            }
        },
        "defaulttheme.DeleteDefaultThemeCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "defaulttheme.UpdateDefaultThemeCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "demo": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mediaId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pages": {
                    "type": "string"
                }
            }
        },
        "discount.CreateDiscountCommand": {
            "type": "object",
            "required": [
                "expiryDate",
                "quantity",
                "siteId",
                "type",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "expiryDate": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "maximum": 1000
                },
                "siteId": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "discount.DeleteDiscountCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "discount.UpdateDiscountCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "expiryDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "enums.AiTypeEnum": {
            "type": "string",
            "enum": [
                "gpt35",
                "gpt4",
                "claude"
            ],
            "x-enum-varnames": [
                "GPT35Type",
                "GPT4Type",
                "ClaudeType"
            ]
        },
        "enums.ArticleSortEnum": {
            "type": "string",
            "enum": [
                "title_a_z",
                "title_z_a",
                "recently_added",
                "recently_updated",
                "most_visited",
                "least_visited",
                "most_rated",
                "least_rated",
                "most_reviewed",
                "least_reviewed"
            ],
            "x-enum-varnames": [
                "ArticleTitleAZSort",
                "ArticleTitleZASort",
                "ArticleRecentlyAddedSort",
                "ArticleRecentlyUpdatedSort",
                "ArticleMostVisitedSort",
                "ArticleLeastVisitedSort",
                "ArticleMostRatedSort",
                "ArticleLeastRatedSort",
                "ArticleMostReviewedSort",
                "ArticleLeastReviewedSort"
            ]
        },
        "enums.CourierEnum": {
            "type": "string",
            "enum": [
                "post",
                "tipax"
            ],
            "x-enum-varnames": [
                "PostCourier",
                "TipaxCourier"
            ]
        },
        "enums.CustomerTicketCategoryEnum": {
            "type": "string",
            "enum": [
                "bug",
                "enhancement",
                "feature_request",
                "question",
                "documentation",
                "financial"
            ],
            "x-enum-varnames": [
                "CustomerTicketBugCategory",
                "CustomerTicketEnhancementCategory",
                "CustomerTicketFeatureRequestCategory",
                "CustomerTicketQuestionCategory",
                "CustomerTicketDocumentationCategory",
                "CustomerTicketFinancialCategory"
            ]
        },
        "enums.CustomerTicketPriorityEnum": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "CustomerTicketLowPriority",
                "CustomerTicketMediumPriority",
                "CustomerTicketHighPriority",
                "CustomerTicketCriticalPriority"
            ]
        },
        "enums.CustomerTicketStatusEnum": {
            "type": "string",
            "enum": [
                "new",
                "in_progress",
                "closed"
            ],
            "x-enum-varnames": [
                "CustomerTicketNewStatus",
                "CustomerTicketInProgressStatus",
                "CustomerTicketClosedStatus"
            ]
        },
        "enums.DiscountTypeEnum": {
            "type": "string",
            "enum": [
                "fixed",
                "percentage"
            ],
            "x-enum-varnames": [
                "FixedDiscountType",
                "PercentageDiscountType"
            ]
        },
        "enums.DomainTypeEnum": {
            "type": "string",
            "enum": [
                "domain",
                "subdomain"
            ],
            "x-enum-varnames": [
                "DomainType",
                "SubdomainType"
            ]
        },
        "enums.FileItemPermissionEnum": {
            "type": "string",
            "enum": [
                "private",
                "public",
                "private",
                "public"
            ],
            "x-enum-varnames": [
                "FileItemPrivatePermission",
                "FileItemPublicPermission",
                "PrivatePermission",
                "PublicPermission"
            ]
        },
        "enums.OperationType": {
            "type": "string",
            "enum": [
                "copy",
                "move",
                "rename"
            ],
            "x-enum-varnames": [
                "FileItemCopyOperation",
                "FileItemMoveOperation",
                "FileItemRenameOperation"
            ]
        },
        "enums.PaymentGatewaysEnum": {
            "type": "string",
            "enum": [
                "saman",
                "mellat",
                "parsian",
                "pasargad",
                "irankish",
                "melli",
                "asanpardakht",
                "sepehr",
                "zarinpal",
                "payir",
                "idpay",
                "yekpay",
                "payping",
                "parbadvirtual",
                "nextpay"
            ],
            "x-enum-varnames": [
                "SamanGatewayEnum",
                "MellatGatewayEnum",
                "ParsianGatewayEnum",
                "PasargadGatewayEnum",
                "IranKishGatewayEnum",
                "MelliGatewayEnum",
                "AsanPardakhtGatewayEnum",
                "SepehrGatewayEnum",
                "ZarinPalGatewayEnum",
                "PayIrGatewayEnum",
                "IdPayGatewayEnum",
                "YekPayGatewayEnum",
                "PayPingGatewayEnum",
                "ParbadVirtualGatewayEnum",
                "NextPayGateway"
            ]
        },
        "enums.ProductAttributeTypeEnum": {
            "type": "string",
            "enum": [
                "public",
                "technical",
                "other"
            ],
            "x-enum-varnames": [
                "PublicProductAttributeType",
                "TechnicalProductAttributeType",
                "OtherProductAttributeType"
            ]
        },
        "enums.ProductSortEnum": {
            "type": "string",
            "enum": [
                "price_low_to_high",
                "price_high_to_low",
                "coupon_high_to_low",
                "name_a_z",
                "name_z_a",
                "recently_added",
                "recently_updated",
                "most_selling",
                "most_visited",
                "most_rated",
                "most_reviewed",
                "least_visited",
                "least_rated",
                "least_reviewed"
            ],
            "x-enum-varnames": [
                "ProductPriceLowToHighSort",
                "ProductPriceHighToLowSort",
                "ProductCouponHighToLowSort",
                "ProductNameAZSort",
                "ProductNameZASort",
                "ProductRecentlyAddedSort",
                "ProductRecentlyUpdatedSort",
                "ProductMostSellingSort",
                "ProductMostVisitedSort",
                "ProductMostRatedSort",
                "ProductMostReviewedSort",
                "ProductLeastVisitedSort",
                "ProductLeastRatedSort",
                "ProductLeastReviewedSort"
            ]
        },
        "enums.SiteTypeEnum": {
            "type": "string",
            "enum": [
                "shop",
                "blog",
                "business"
            ],
            "x-enum-varnames": [
                "ShopType",
                "BlogType",
                "BusinessType"
            ]
        },
        "enums.StatusEnum": {
            "type": "string",
            "enum": [
                "inactive",
                "active",
                "pending",
                "deleted",
                "disabled",
                "enabled"
            ],
            "x-enum-varnames": [
                "InactiveStatus",
                "ActiveStatus",
                "PendingStatus",
                "DeletedStatus",
                "DisabledStatus",
                "EnabledStatus"
            ]
        },
        "enums.TicketCategoryEnum": {
            "type": "string",
            "enum": [
                "bug",
                "enhancement",
                "feature_request",
                "question",
                "documentation",
                "financial"
            ],
            "x-enum-varnames": [
                "TicketBugCategory",
                "TicketEnhancementCategory",
                "TicketFeatureRequestCategory",
                "TicketQuestionCategory",
                "TicketDocumentationCategory",
                "TicketFinancialCategory"
            ]
        },
        "enums.TicketPriorityEnum": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "TicketLowPriority",
                "TicketMediumPriority",
                "TicketHighPriority",
                "TicketCriticalPriority"
            ]
        },
        "enums.TicketStatusEnum": {
            "type": "string",
            "enum": [
                "new",
                "in_progress",
                "closed"
            ],
            "x-enum-varnames": [
                "NewTicketStatus",
                "InProgressTicketStatus",
                "ClosedTicketStatus"
            ]
        },
        "enums.UnitPriceNameEnum": {
            "type": "string",
            "enum": [
                "storage_mb_credits",
                "page_view_credits",
                "form_submit_credits",
                "site_credits",
                "sms_credits",
                "email_credits",
                "ai_credits",
                "ai_image_credits"
            ],
            "x-enum-varnames": [
                "StorageMbCreditsName",
                "PageViewCreditsName",
                "FormSubmitCreditsName",
                "SiteCreditsName",
                "SmsCreditsName",
                "EmailCreditsName",
                "AiCreditsName",
                "AiImageCreditsName"
            ]
        },
        "enums.UserTypeEnum": {
            "type": "string",
            "enum": [
                "user",
                "customer",
                "guest"
            ],
            "x-enum-varnames": [
                "UserTypeValue",
                "CustomerTypeValue",
                "GuestTypeValue"
            ]
        },
        "enums.VerifyPaymentEndpointEnum": {
            "type": "string",
            "enum": [
                "charge_credit_verify",
                "upgrade_plan_verify",
                "create_order_verify"
            ],
            "x-enum-varnames": [
                "ChargeCreditVerifyEndpoint",
                "UpgradePlanVerifyEndpoint",
                "CreateOrderVerifyEndpoint"
            ]
        },
        "enums.VerifyTypeEnum": {
            "type": "string",
            "enum": [
                "verify_email",
                "verify_phone",
                "forget_password_email",
                "forget_password_phone"
            ],
            "x-enum-varnames": [
                "VerifyEmailType",
                "VerifyPhoneType",
                "ForgetPasswordEmailType",
                "ForgetPasswordPhoneType"
            ]
        },
        "fileitem.CreateOrDirectoryItemCommand": {
            "type": "object"
        },
        "fileitem.DeleteFileItemCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "fileitem.FileOperationCommand": {
            "type": "object",
            "required": [
                "id",
                "operationType"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "newName": {
                    "type": "string"
                },
                "newParentId": {
                    "type": "integer"
                },
                "operationType": {
                    "$ref": "#/definitions/enums.OperationType"
                }
            }
        },
        "fileitem.ForceDeleteFileItemCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "fileitem.GetDownloadFileItemByIdQuery": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "fileitem.GetTreeDirectoryQuery": {
            "type": "object",
            "properties": {
                "parentFileItemId": {
                    "type": "integer"
                }
            }
        },
        "fileitem.MediaUrlRequest": {
            "type": "object",
            "required": [
                "id",
                "order"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                }
            }
        },
        "fileitem.RestoreFileItemCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "fileitem.UpdateFileItemCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isChangePermission": {
                    "type": "boolean"
                },
                "permission": {
                    "$ref": "#/definitions/enums.FileItemPermissionEnum"
                }
            }
        },
        "header_footer.CreateHeaderFooterCommand": {
            "type": "object",
            "required": [
                "body",
                "siteId",
                "type"
            ],
            "properties": {
                "body": {
                    "$ref": "#/definitions/header_footer.HeaderFooterBody"
                },
                "isMain": {
                    "type": "boolean"
                },
                "siteId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/header_footer.HeaderFooterTypeEnum"
                }
            }
        },
        "header_footer.DeleteHeaderFooterCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "header_footer.HeaderFooterBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "props": {},
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/header_footer.HeaderFooterRow"
                    }
                }
            }
        },
        "header_footer.HeaderFooterColumn": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/header_footer.HeaderFooterComponent"
                    }
                },
                "id": {
                    "type": "string"
                },
                "props": {},
                "style": {}
            }
        },
        "header_footer.HeaderFooterComponent": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/common_dto.PaginationJson"
                },
                "filters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "props": {},
                "sort": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "header_footer.HeaderFooterRow": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/header_footer.HeaderFooterColumn"
                    }
                },
                "id": {
                    "type": "string"
                },
                "props": {}
            }
        },
        "header_footer.HeaderFooterTypeEnum": {
            "type": "string",
            "enum": [
                "header",
                "footer"
            ],
            "x-enum-varnames": [
                "HeaderType",
                "FooterType"
            ]
        },
        "header_footer.UpdateHeaderFooterCommand": {
            "type": "object",
            "required": [
                "id",
                "siteId",
                "type"
            ],
            "properties": {
                "body": {
                    "$ref": "#/definitions/header_footer.HeaderFooterBody"
                },
                "id": {
                    "type": "integer"
                },
                "isMain": {
                    "type": "boolean"
                },
                "siteId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/header_footer.HeaderFooterTypeEnum"
                }
            }
        },
        "order.CreateOrderRequestCommand": {
            "type": "object",
            "required": [
                "addressId",
                "gateway",
                "siteId"
            ],
            "properties": {
                "addressId": {
                    "type": "integer"
                },
                "courier": {
                    "$ref": "#/definitions/enums.CourierEnum"
                },
                "description": {
                    "type": "string"
                },
                "finalFrontReturnUrl": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/enums.PaymentGatewaysEnum"
                },
                "siteId": {
                    "type": "integer"
                }
            }
        },
        "order.CreateOrderVerifyCommand": {
            "type": "object",
            "required": [
                "orderData"
            ],
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "orderData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "paymentStatus": {
                    "type": "string"
                },
                "transaction_code": {
                    "type": "string"
                }
            }
        },
        "page.CreatePageCommand": {
            "type": "object",
            "required": [
                "body",
                "footerId",
                "headerId",
                "siteId",
                "slug"
            ],
            "properties": {
                "body": {
                    "$ref": "#/definitions/page.PageBody"
                },
                "description": {
                    "type": "string"
                },
                "footerId": {
                    "type": "integer"
                },
                "headerId": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "page.DeletePageCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "page.PageBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "props": {},
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page.PageRow"
                    }
                }
            }
        },
        "page.PageColumn": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page.PageComponent"
                    }
                },
                "id": {
                    "type": "string"
                },
                "props": {},
                "style": {}
            }
        },
        "page.PageComponent": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/common_dto.PaginationJson"
                },
                "filters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "props": {},
                "sort": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "page.PageRow": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/page.PageColumn"
                    }
                },
                "id": {
                    "type": "string"
                },
                "props": {}
            }
        },
        "page.UpdatePageCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "body": {
                    "$ref": "#/definitions/page.PageBody"
                },
                "description": {
                    "type": "string"
                },
                "footerId": {
                    "type": "integer"
                },
                "headerId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "payment.AsanPardakhtGateway": {
            "type": "object",
            "properties": {
                "iv": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "merchantConfigurationId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "payment.CreateOrUpdateGatewayCommand": {
            "type": "object",
            "required": [
                "siteId"
            ],
            "properties": {
                "asanPardakht": {
                    "$ref": "#/definitions/payment.AsanPardakhtGateway"
                },
                "idPay": {
                    "$ref": "#/definitions/payment.IdPayGateway"
                },
                "iranKish": {
                    "$ref": "#/definitions/payment.IranKishGateway"
                },
                "isActiveAsanPardakht": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveIdPay": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveIranKish": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveMellat": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveMelli": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveParbadVirtual": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveParsian": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActivePasargad": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActivePayIr": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActivePayPing": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveSaman": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveSepehr": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveYekPay": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "isActiveZarinPal": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "mellat": {
                    "$ref": "#/definitions/payment.MellatGateway"
                },
                "melli": {
                    "$ref": "#/definitions/payment.MelliGateway"
                },
                "parsian": {
                    "$ref": "#/definitions/payment.ParsianGateway"
                },
                "pasargad": {
                    "$ref": "#/definitions/payment.PasargadGateway"
                },
                "payIr": {
                    "$ref": "#/definitions/payment.PayIrGateway"
                },
                "payPing": {
                    "$ref": "#/definitions/payment.PayPingGateway"
                },
                "saman": {
                    "$ref": "#/definitions/payment.SamanGateway"
                },
                "sepehr": {
                    "$ref": "#/definitions/payment.SepehrGateway"
                },
                "siteId": {
                    "type": "integer"
                },
                "yekPay": {
                    "$ref": "#/definitions/payment.YekPayGateway"
                },
                "zarinPal": {
                    "$ref": "#/definitions/payment.ZarinPalGateway"
                }
            }
        },
        "payment.IdPayGateway": {
            "type": "object",
            "required": [
                "isTestAccount"
            ],
            "properties": {
                "api": {
                    "type": "string"
                },
                "isTestAccount": {
                    "type": "boolean"
                }
            }
        },
        "payment.IranKishGateway": {
            "type": "object",
            "properties": {
                "acceptorId": {
                    "type": "string"
                },
                "passPhrase": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "terminalId": {
                    "type": "string"
                }
            }
        },
        "payment.MellatGateway": {
            "type": "object",
            "required": [
                "terminalId"
            ],
            "properties": {
                "terminalId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "userPassword": {
                    "type": "string"
                }
            }
        },
        "payment.MelliGateway": {
            "type": "object",
            "properties": {
                "merchantId": {
                    "type": "string"
                },
                "terminalId": {
                    "type": "string"
                },
                "terminalKey": {
                    "type": "string"
                }
            }
        },
        "payment.ParsianGateway": {
            "type": "object",
            "properties": {
                "loginAccount": {
                    "type": "string"
                }
            }
        },
        "payment.PasargadGateway": {
            "type": "object",
            "properties": {
                "merchantCode": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "terminalCode": {
                    "type": "string"
                }
            }
        },
        "payment.PayIrGateway": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "isTestAccount": {
                    "type": "boolean"
                }
            }
        },
        "payment.PayPingGateway": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "payment.RequestGatewayCommand": {
            "type": "object",
            "required": [
                "amount",
                "callVerifyUrl",
                "gateway",
                "orderData",
                "orderId",
                "siteId",
                "userId",
                "userType"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "callVerifyUrl": {
                    "$ref": "#/definitions/enums.VerifyPaymentEndpointEnum"
                },
                "clientIp": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/enums.PaymentGatewaysEnum"
                },
                "orderData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "orderId": {
                    "type": "integer"
                },
                "returnUrl": {
                    "type": "string"
                },
                "serviceAction": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "userType": {
                    "$ref": "#/definitions/enums.UserTypeEnum"
                }
            }
        },
        "payment.SamanGateway": {
            "type": "object",
            "properties": {
                "merchantId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "payment.SepehrGateway": {
            "type": "object",
            "required": [
                "terminalId"
            ],
            "properties": {
                "terminalId": {
                    "type": "integer"
                }
            }
        },
        "payment.VerifyPaymentCommand": {
            "type": "object",
            "properties": {
                "paymentToken": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "transactionCode": {
                    "type": "string"
                }
            }
        },
        "payment.YekPayGateway": {
            "type": "object",
            "properties": {
                "merchantId": {
                    "type": "string"
                }
            }
        },
        "payment.ZarinPalGateway": {
            "type": "object",
            "properties": {
                "authorizationToken": {
                    "type": "string"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "merchantId": {
                    "type": "string"
                }
            }
        },
        "plan.CreatePlanCommand": {
            "type": "object",
            "required": [
                "aiCredits",
                "aiImageCredits",
                "duration",
                "emailCredits",
                "price",
                "smsCredits",
                "storageMbCredits"
            ],
            "properties": {
                "aiCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "aiImageCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "discountType": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "duration": {
                    "type": "integer",
                    "minimum": 1
                },
                "emailCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "feature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "showStatus": {
                    "type": "string"
                },
                "smsCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "storageMbCredits": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "plan.DeletePlanCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "plan.UpdatePlanCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "aiCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "aiImageCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "discountType": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "duration": {
                    "type": "integer",
                    "minimum": 1
                },
                "emailCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "feature": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "showStatus": {
                    "type": "string"
                },
                "smsCredits": {
                    "type": "integer",
                    "minimum": 0
                },
                "storageMbCredits": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "product.CouponCommand": {
            "type": "object",
            "required": [
                "expiryDate",
                "quantity",
                "type",
                "value"
            ],
            "properties": {
                "expiryDate": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "product.CreateProductCommand": {
            "type": "object",
            "required": [
                "productVariants",
                "siteId",
                "slug",
                "status",
                "weight"
            ],
            "properties": {
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coupon": {
                    "$ref": "#/definitions/product.CouponCommand"
                },
                "description": {
                    "type": "string"
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "freeSend": {
                    "type": "boolean"
                },
                "longDescription": {
                    "type": "string"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "productAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.ProductAttributeCommand"
                    }
                },
                "productVariants": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/product.ProductVariantCommand"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "weight": {
                    "type": "integer",
                    "maximum": 1000
                }
            }
        },
        "product.DeleteProductCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "product.GetByFiltersSortProductQuery": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "siteId"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "pageSize": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                },
                "selectedFilters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "selectedSort": {
                    "$ref": "#/definitions/enums.ProductSortEnum"
                },
                "siteId": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "sortBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                }
            }
        },
        "product.ProductAttributeCommand": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.ProductAttributeTypeEnum"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "product.ProductVariantCommand": {
            "type": "object",
            "required": [
                "price",
                "stock"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "product.UpdateProductCommand": {
            "type": "object",
            "required": [
                "id",
                "siteId"
            ],
            "properties": {
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coupon": {
                    "$ref": "#/definitions/product.CouponCommand"
                },
                "description": {
                    "type": "string"
                },
                "discountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "freeSend": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "longDescription": {
                    "type": "string"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "productAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.ProductAttributeCommand"
                    }
                },
                "productVariants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.ProductVariantCommand"
                    }
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.StatusEnum"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "product_category.CreateCategoryCommand": {
            "type": "object",
            "required": [
                "order",
                "siteId",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parentCategoryId": {
                    "type": "integer"
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "product_category.DeleteCategoryCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "product_category.UpdateCategoryCommand": {
            "type": "object",
            "required": [
                "id",
                "order",
                "siteId"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "parentCategoryId": {
                    "type": "integer"
                },
                "seoTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "product_review.AdminGetAllProductReviewQuery": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "pageSize": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "search": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "sortBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                }
            }
        },
        "product_review.CreateProductReviewCommand": {
            "type": "object",
            "required": [
                "dislike",
                "like",
                "productId",
                "rating",
                "siteId"
            ],
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "dislike": {
                    "type": "integer",
                    "minimum": 0
                },
                "like": {
                    "type": "integer",
                    "minimum": 0
                },
                "productId": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "reviewText": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                }
            }
        },
        "product_review.DeleteProductReviewCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "product_review.GetAllProductReviewQuery": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "productId",
                "siteId"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "pageSize": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "productId": {
                    "type": "integer"
                },
                "search": {
                    "type": "string"
                },
                "searchBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                },
                "siteId": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "sortBy": {
                    "type": "string",
                    "enum": [
                        "title",
                        "description"
                    ]
                }
            }
        },
        "product_review.GetByIdProductReviewQuery": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "product_review.UpdateProductReviewCommand": {
            "type": "object",
            "required": [
                "id",
                "productId"
            ],
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "dislike": {
                    "type": "integer",
                    "minimum": 0
                },
                "id": {
                    "type": "integer"
                },
                "like": {
                    "type": "integer",
                    "minimum": 0
                },
                "productId": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "reviewText": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                }
            }
        },
        "resp.Result": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "role.CreateRoleCommand": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "role.SetRoleToCustomerCommand": {
            "type": "object",
            "required": [
                "customerId"
            ],
            "properties": {
                "customerId": {
                    "type": "integer"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "role.SetRoleToPlanCommand": {
            "type": "object",
            "required": [
                "planId"
            ],
            "properties": {
                "planId": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "role.SetRoleToUserCommand": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "role.UpdateRoleCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "site.CreateSiteCommand": {
            "type": "object",
            "required": [
                "domain",
                "domainType",
                "siteType",
                "status"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "domainType": {
                    "$ref": "#/definitions/enums.DomainTypeEnum"
                },
                "name": {
                    "type": "string"
                },
                "siteType": {
                    "$ref": "#/definitions/enums.SiteTypeEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.StatusEnum"
                }
            }
        },
        "site.DeleteSiteCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "site.UpdateSiteCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "domainType": {
                    "$ref": "#/definitions/enums.DomainTypeEnum"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "siteType": {
                    "$ref": "#/definitions/enums.SiteTypeEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.StatusEnum"
                }
            }
        },
        "ticket.AdminReplayTicketCommand": {
            "type": "object",
            "required": [
                "comment",
                "id",
                "priority",
                "product_category",
                "status"
            ],
            "properties": {
                "assignedTo": {
                    "type": "integer"
                },
                "comment": {
                    "$ref": "#/definitions/ticket.CommentCommand"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/enums.TicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.TicketCategoryEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.TicketStatusEnum"
                }
            }
        },
        "ticket.CommentCommand": {
            "type": "object",
            "required": [
                "respondentId"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {}
                },
                "respondentId": {
                    "type": "integer"
                }
            }
        },
        "ticket.CreateTicketCommand": {
            "type": "object",
            "required": [
                "comment",
                "priority",
                "product_category"
            ],
            "properties": {
                "comment": {
                    "$ref": "#/definitions/ticket.CommentCommand"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/enums.TicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.TicketCategoryEnum"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ticket.ReplayTicketCommand": {
            "type": "object",
            "required": [
                "assignedTo",
                "comment",
                "id",
                "priority",
                "product_category",
                "status"
            ],
            "properties": {
                "assignedTo": {
                    "type": "integer"
                },
                "comment": {
                    "$ref": "#/definitions/ticket.CommentCommand"
                },
                "id": {
                    "type": "integer"
                },
                "mediaIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/enums.TicketPriorityEnum"
                },
                "product_category": {
                    "$ref": "#/definitions/enums.TicketCategoryEnum"
                },
                "status": {
                    "$ref": "#/definitions/enums.TicketStatusEnum"
                }
            }
        },
        "unit_price.CalculateUnitPriceUnitPriceQuery": {
            "type": "object",
            "required": [
                "unitPriceCount",
                "unitPriceName"
            ],
            "properties": {
                "unitPriceCount": {
                    "type": "integer"
                },
                "unitPriceDay": {
                    "type": "integer"
                },
                "unitPriceName": {
                    "$ref": "#/definitions/enums.UnitPriceNameEnum"
                }
            }
        },
        "unit_price.UpdateUnitPriceCommand": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "discount": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "discountType": {
                    "$ref": "#/definitions/enums.DiscountTypeEnum"
                },
                "hasDay": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "user.ChargeCreditRequestUserCommand": {
            "type": "object",
            "required": [
                "gateway",
                "unitPrices"
            ],
            "properties": {
                "finalFrontReturnUrl": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/enums.PaymentGatewaysEnum"
                },
                "unitPrices": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/user.UnitPriceQuery"
                    }
                }
            }
        },
        "user.LoginUserCommand": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RegisterUserCommand": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RequestVerifyAndForgetUserCommand": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.VerifyTypeEnum"
                }
            }
        },
        "user.SmptSettings": {
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UnitPriceQuery": {
            "type": "object",
            "required": [
                "unitPriceCount",
                "unitPriceName"
            ],
            "properties": {
                "unitPriceCount": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "unitPriceDay": {
                    "type": "integer"
                },
                "unitPriceName": {
                    "$ref": "#/definitions/enums.UnitPriceNameEnum"
                }
            }
        },
        "user.UpdateProfileUserCommand": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "addressIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "aiTypeEnum": {
                    "$ref": "#/definitions/enums.AiTypeEnum"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "nationalCode": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "smtp": {
                    "$ref": "#/definitions/user.SmptSettings"
                },
                "useCustomEmailSmtp": {
                    "$ref": "#/definitions/enums.StatusEnum"
                }
            }
        },
        "user.UpgradePlanRequestUserCommand": {
            "type": "object",
            "required": [
                "gateway",
                "planId"
            ],
            "properties": {
                "finalFrontReturnUrl": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/enums.PaymentGatewaysEnum"
                },
                "planId": {
                    "type": "integer"
                }
            }
        },
        "website.GetSingleArticleBySlugQuery": {
            "type": "object",
            "required": [
                "domain",
                "slug"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "website.GetSingleProductBySlugQuery": {
            "type": "object",
            "required": [
                "domain",
                "slug"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "siteId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        }
    }
}