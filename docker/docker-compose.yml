version: "3.8"

services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - appnet
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: app
    restart: unless-stopped
    environment:
      - GIN_MODE=release
      - APP_ENV=stage
    ports:
      - "8585:8585"
    networks:
      - appnet

  redis:
    image: bitnami/redis:8.0.0
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=redis_password
    command: [ "redis-server", "--requirepass", "mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV" ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/bitnami/redis/data
    networks:
      - appnet

  mongodb:
    image: bitnami/mongodb:8.0.9
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
      - MONGODB_USERNAME=amirex128
      - MONGODB_PASSWORD=mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
      - MONGODB_DATABASE=new_site_builder
      - MONGODB_PORT_NUMBER=27017
      - MONGODB_ENABLE_MAJORITY_READ=true
      - MONGODB_ENABLE_JOURNAL=true
      - MONGODB_INIT_RETRY_ATTEMPTS=7
      - MONGODB_INIT_RETRY_DELAY=5
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/bitnami/mongodb/data
      - ./mongodb/init-user.js:/docker-entrypoint-initdb.d/init-user.js:ro
    networks:
      - appnet

  mysql:
    image: bitnami/mysql:8.4.5
    container_name: mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
      - MYSQL_USER=amirex128
      - MYSQL_PASSWORD=mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/bitnami/mysql/data
      - ./mysql:/docker-entrypoint-startdb.d
    networks:
      - appnet

  minio:
    image: bitnami/minio:2025.4.22
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: amirex128
      MINIO_ROOT_PASSWORD: mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
      MINIO_USE_SSL: "false"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/bitnami/minio
    networks:
      - appnet

  rabbitmq:
    image: bitnami/rabbitmq:4.1.0
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_USERNAME=amirex128
      - RABBITMQ_PASSWORD=mI6G5jd3qNlJQinBOnA2z5SVEawLn4WV
      - RABBITMQ_VHOST=/
      - RABBITMQ_MANAGEMENT_BIND_IP=0.0.0.0
      - RABBITMQ_MANAGEMENT_PORT_NUMBER=15672
      - RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS=true
      - RABBITMQ_NODE_PORT_NUMBER=5672
      - RABBITMQ_ERL_COOKIE=supersecreterlcookie
      - RABBITMQ_DISK_FREE_RELATIVE_LIMIT=1.0
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.4
      - RABBITMQ_LOAD_DEFINITIONS=no
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_UPDATE_PASSWORD=no
      - RABBITMQ_CLUSTER_PARTITION_HANDLING=ignore
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/bitnami/rabbitmq
    networks:
      - appnet

  openresty:
    image: bitnami/openresty:1.27.1-2
    container_name: openresty
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - openresty_conf:/opt/bitnami/openresty/conf
      - openresty_logs:/opt/bitnami/openresty/logs
      - openresty_html:/app
    environment:
      - OPENRESTY_HTTP_PORT_NUMBER=8080
      - OPENRESTY_HTTPS_PORT_NUMBER=8443
    networks:
      - appnet

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  mysql_data:
    driver: local
  minio_data:
    driver: local
  openresty_conf:
    driver: local
  openresty_logs:
    driver: local
  openresty_html:
    driver: local
  rabbitmq_data:
    driver: local
networks:
  appnet:
    driver: bridge
