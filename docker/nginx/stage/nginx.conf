worker_processes auto;
pid /usr/local/openresty/nginx/logs/nginx.pid;
error_log /dev/stderr debug;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
    epoll_events 512;
}

http {
    # Basic Settings
    include config/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    # Access Logs
    access_log /dev/stdout main buffer=32k flush=5s;
    error_log /dev/stderr debug;
    
    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 3600;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    
    # Timeouts
    client_header_timeout 3600;
    client_body_timeout 3600;
    send_timeout 3600;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Buffer Settings
    client_max_body_size 1000M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Lua Settings
    lua_shared_dict jwt_secrets 1m;
    lua_code_cache on;
    lua_shared_dict cache 10m;
    
    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    more_set_headers "X-Frame-Options: SAMEORIGIN";
    more_set_headers "X-XSS-Protection: 1; mode=block";
    more_set_headers "X-Content-Type-Options: nosniff";
    more_set_headers "Referrer-Policy: no-referrer-when-downgrade";
    more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
    more_set_headers "X-Download-Options: noopen";
    more_set_headers "X-Permitted-Cross-Domain-Policies: none";
    more_set_headers "X-DNS-Prefetch-Control: off";
    
    # CORS Configuration
    map $http_origin $cors_origin {
        default "*";
        "~^https?://localhost(:[0-9]+)?$" $http_origin;
        "~^https?://127\.0\.0\.1(:[0-9]+)?$" $http_origin;
        # Add other specific domains as needed
    }
    
    more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
    more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE, PATCH';
    more_set_headers 'Access-Control-Allow-Headers: Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Authorization,Content-Type,Accept,Origin,X-User-Id,X-Customer-Id,X-Type,X-Scope,X-Gateway-Authorization';
    more_set_headers 'Access-Control-Allow-Credentials: true';
    more_set_headers 'Access-Control-Expose-Headers: Content-Length,Content-Type';
    more_set_headers 'Access-Control-Max-Age: 1728000';

    more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
    more_set_headers "X-Frame-Options: SAMEORIGIN";
    more_set_headers "X-XSS-Protection: 1; mode=block";
    more_set_headers "X-Content-Type-Options: nosniff";
    more_set_headers "Referrer-Policy: no-referrer-when-downgrade";

    # more_set_headers "Content-Security-Policy: default-src 'self' http: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: http: https:;";
    

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 100;
    
    # Include configurations
    include config/upstreams.conf;
    include servers/*.conf;
    
    # Add OPTIONS handling for CORS preflight
    map $request_method $cors_preflight {
        OPTIONS 1;
        default 0;
    }
    
    # This block will be used in your server blocks to handle preflight requests
    # Example usage inside your server blocks:
    # if ($cors_preflight) {
    #     return 204;
    # }
}