// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: tmp.IIgYTah7KL

package get

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AttributeService_GetProductAttributes_FullMethodName                   = "/ecommerce.attribute.get.AttributeService/GetProductAttributes"
	AttributeService_GetAttributesCategories_FullMethodName                = "/ecommerce.attribute.get.AttributeService/GetAttributesCategories"
	AttributeService_GetProductsWithCertainAttributes_FullMethodName       = "/ecommerce.attribute.get.AttributeService/GetProductsWithCertainAttributes"
	AttributeService_GetSearchAttributesCategories_FullMethodName          = "/ecommerce.attribute.get.AttributeService/GetSearchAttributesCategories"
	AttributeService_GetSearchProductsWithCertainAttributes_FullMethodName = "/ecommerce.attribute.get.AttributeService/GetSearchProductsWithCertainAttributes"
)

// AttributeServiceClient is the client API for AttributeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AttributeServiceClient interface {
	GetProductAttributes(ctx context.Context, in *ProductAttributeRequest, opts ...grpc.CallOption) (*ProductAttributeResponse, error)
	GetAttributesCategories(ctx context.Context, in *AttributesCategoriesRequest, opts ...grpc.CallOption) (*AttributesCategoriesResponse, error)
	GetProductsWithCertainAttributes(ctx context.Context, in *ProductsWithCertainAttributesRequest, opts ...grpc.CallOption) (*ProductsWithCertainAttributesResponse, error)
	GetSearchAttributesCategories(ctx context.Context, in *AttributesCategoriesRequest, opts ...grpc.CallOption) (*AttributesCategoriesResponse, error)
	GetSearchProductsWithCertainAttributes(ctx context.Context, in *ProductsWithCertainAttributesRequest, opts ...grpc.CallOption) (*ProductsWithCertainAttributesResponse, error)
}

type attributeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAttributeServiceClient(cc grpc.ClientConnInterface) AttributeServiceClient {
	return &attributeServiceClient{cc}
}

func (c *attributeServiceClient) GetProductAttributes(ctx context.Context, in *ProductAttributeRequest, opts ...grpc.CallOption) (*ProductAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ProductAttributeResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetProductAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetAttributesCategories(ctx context.Context, in *AttributesCategoriesRequest, opts ...grpc.CallOption) (*AttributesCategoriesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AttributesCategoriesResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetAttributesCategories_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetProductsWithCertainAttributes(ctx context.Context, in *ProductsWithCertainAttributesRequest, opts ...grpc.CallOption) (*ProductsWithCertainAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ProductsWithCertainAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetProductsWithCertainAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetSearchAttributesCategories(ctx context.Context, in *AttributesCategoriesRequest, opts ...grpc.CallOption) (*AttributesCategoriesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AttributesCategoriesResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetSearchAttributesCategories_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetSearchProductsWithCertainAttributes(ctx context.Context, in *ProductsWithCertainAttributesRequest, opts ...grpc.CallOption) (*ProductsWithCertainAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ProductsWithCertainAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetSearchProductsWithCertainAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttributeServiceServer is the server API for AttributeService service.
// All implementations must embed UnimplementedAttributeServiceServer
// for forward compatibility.
type AttributeServiceServer interface {
	GetProductAttributes(context.Context, *ProductAttributeRequest) (*ProductAttributeResponse, error)
	GetAttributesCategories(context.Context, *AttributesCategoriesRequest) (*AttributesCategoriesResponse, error)
	GetProductsWithCertainAttributes(context.Context, *ProductsWithCertainAttributesRequest) (*ProductsWithCertainAttributesResponse, error)
	GetSearchAttributesCategories(context.Context, *AttributesCategoriesRequest) (*AttributesCategoriesResponse, error)
	GetSearchProductsWithCertainAttributes(context.Context, *ProductsWithCertainAttributesRequest) (*ProductsWithCertainAttributesResponse, error)
	mustEmbedUnimplementedAttributeServiceServer()
}

// UnimplementedAttributeServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAttributeServiceServer struct{}

func (UnimplementedAttributeServiceServer) GetProductAttributes(context.Context, *ProductAttributeRequest) (*ProductAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) GetAttributesCategories(context.Context, *AttributesCategoriesRequest) (*AttributesCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttributesCategories not implemented")
}
func (UnimplementedAttributeServiceServer) GetProductsWithCertainAttributes(context.Context, *ProductsWithCertainAttributesRequest) (*ProductsWithCertainAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductsWithCertainAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) GetSearchAttributesCategories(context.Context, *AttributesCategoriesRequest) (*AttributesCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchAttributesCategories not implemented")
}
func (UnimplementedAttributeServiceServer) GetSearchProductsWithCertainAttributes(context.Context, *ProductsWithCertainAttributesRequest) (*ProductsWithCertainAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchProductsWithCertainAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) mustEmbedUnimplementedAttributeServiceServer() {}
func (UnimplementedAttributeServiceServer) testEmbeddedByValue()                          {}

// UnsafeAttributeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AttributeServiceServer will
// result in compilation errors.
type UnsafeAttributeServiceServer interface {
	mustEmbedUnimplementedAttributeServiceServer()
}

func RegisterAttributeServiceServer(s grpc.ServiceRegistrar, srv AttributeServiceServer) {
	// If the following call pancis, it indicates UnimplementedAttributeServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AttributeService_ServiceDesc, srv)
}

func _AttributeService_GetProductAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetProductAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetProductAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetProductAttributes(ctx, req.(*ProductAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetAttributesCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttributesCategoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetAttributesCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetAttributesCategories_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetAttributesCategories(ctx, req.(*AttributesCategoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetProductsWithCertainAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductsWithCertainAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetProductsWithCertainAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetProductsWithCertainAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetProductsWithCertainAttributes(ctx, req.(*ProductsWithCertainAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetSearchAttributesCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttributesCategoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetSearchAttributesCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetSearchAttributesCategories_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetSearchAttributesCategories(ctx, req.(*AttributesCategoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetSearchProductsWithCertainAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductsWithCertainAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetSearchProductsWithCertainAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetSearchProductsWithCertainAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetSearchProductsWithCertainAttributes(ctx, req.(*ProductsWithCertainAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AttributeService_ServiceDesc is the grpc.ServiceDesc for AttributeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AttributeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ecommerce.attribute.get.AttributeService",
	HandlerType: (*AttributeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductAttributes",
			Handler:    _AttributeService_GetProductAttributes_Handler,
		},
		{
			MethodName: "GetAttributesCategories",
			Handler:    _AttributeService_GetAttributesCategories_Handler,
		},
		{
			MethodName: "GetProductsWithCertainAttributes",
			Handler:    _AttributeService_GetProductsWithCertainAttributes_Handler,
		},
		{
			MethodName: "GetSearchAttributesCategories",
			Handler:    _AttributeService_GetSearchAttributesCategories_Handler,
		},
		{
			MethodName: "GetSearchProductsWithCertainAttributes",
			Handler:    _AttributeService_GetSearchProductsWithCertainAttributes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tmp.IIgYTah7KL",
}
